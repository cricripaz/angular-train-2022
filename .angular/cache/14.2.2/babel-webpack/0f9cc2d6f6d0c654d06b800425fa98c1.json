{"ast":null,"code":"import { map } from \"rxjs\";\nimport { environment } from \"../../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.url = environment.auth.apiBaseUrl;\n      this.apiKey = environment.auth.apiKey;\n    }\n\n    login(body) {\n      return this.http.post(`${this.url}/v1/accounts:signInWithPassword?key=${this.apiKey}`, body).pipe(map(res => {\n        this.authSuccess(res.idToken, res.localId);\n        return res;\n      }));\n    }\n\n    createUser(body) {\n      return this.http.post(`${this.url}/v1/accounts:signUp?key=${this.apiKey}`, body);\n    }\n\n    authSuccess(token, userId) {\n      localStorage.setItem('token', token);\n      localStorage.setItem('userId', userId);\n    }\n\n    getToken() {\n      return localStorage.getItem('token');\n    }\n\n    getUserId() {\n      return localStorage.getItem('userId');\n    }\n\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('userId');\n      this.router.navigate(['login']);\n    }\n\n    verifyLogged() {\n      const token = localStorage.getItem('token'); // return token ? true : false;\n\n      return !!token;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}